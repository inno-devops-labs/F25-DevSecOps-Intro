{
	"results": [
		{
			"rule_id": "AVD-AWS-0124",
			"long_id": "aws-ec2-add-description-to-security-group-rule",
			"rule_description": "Missing description for security group rule.",
			"rule_provider": "aws",
			"rule_service": "ec2",
			"impact": "Descriptions provide context for the firewall rule reasons",
			"resolution": "Add descriptions for all security groups rules",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/ec2/add-description-to-security-group-rule/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group_rule"
			],
			"description": "Security group rule does not have a description.",
			"severity": "LOW",
			"warning": false,
			"status": 0,
			"resource": "aws_security_group.open_ssh",
			"location": {
				"filename": "/src/security_groups.tf",
				"start_line": 5,
				"end_line": 10
			}
		},
		{
			"rule_id": "AVD-AWS-0107",
			"long_id": "aws-ec2-no-public-ingress-sgr",
			"rule_description": "An ingress security group rule allows traffic from /0.",
			"rule_provider": "aws",
			"rule_service": "ec2",
			"impact": "Your port exposed to the internet",
			"resolution": "Set a more restrictive cidr range",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/ec2/no-public-ingress-sgr/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group_rule#cidr_blocks"
			],
			"description": "Security group rule allows ingress from public internet.",
			"severity": "CRITICAL",
			"warning": false,
			"status": 0,
			"resource": "aws_security_group.open_ssh",
			"location": {
				"filename": "/src/security_groups.tf",
				"start_line": 9,
				"end_line": 9
			}
		},
		{
			"rule_id": "AVD-AWS-0057",
			"long_id": "aws-iam-no-policy-wildcards",
			"rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
			"rule_provider": "aws",
			"rule_service": "iam",
			"impact": "Overly permissive policies may grant access to sensitive resources",
			"resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/iam/no-policy-wildcards/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
			],
			"description": "IAM policy document uses wildcarded action '*'",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "aws_iam_policy.wildcard",
			"location": {
				"filename": "/src/iam.tf",
				"start_line": 8,
				"end_line": 8
			}
		},
		{
			"rule_id": "AVD-AWS-0057",
			"long_id": "aws-iam-no-policy-wildcards",
			"rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
			"rule_provider": "aws",
			"rule_service": "iam",
			"impact": "Overly permissive policies may grant access to sensitive resources",
			"resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/iam/no-policy-wildcards/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
			],
			"description": "IAM policy document uses sensitive action '*' on wildcarded resource '*'",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "aws_iam_policy.wildcard",
			"location": {
				"filename": "/src/iam.tf",
				"start_line": 10,
				"end_line": 10
			}
		},
		{
			"rule_id": "AVD-AWS-0177",
			"long_id": "aws-rds-enable-deletion-protection",
			"rule_description": "RDS Deletion Protection Disabled",
			"rule_provider": "aws",
			"rule_service": "rds",
			"impact": "",
			"resolution": "Modify the RDS instances to enable deletion protection.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/rds/enable-deletion-protection/"
			],
			"description": "Instance does not have Deletion Protection enabled",
			"severity": "MEDIUM",
			"warning": false,
			"status": 0,
			"resource": "aws_db_instance.vuln",
			"location": {
				"filename": "/src/database.tf",
				"start_line": 1,
				"end_line": 8
			}
		},
		{
			"rule_id": "AVD-AWS-0176",
			"long_id": "aws-rds-enable-iam-auth",
			"rule_description": "RDS IAM Database Authentication Disabled",
			"rule_provider": "aws",
			"rule_service": "rds",
			"impact": "",
			"resolution": "Modify the PostgreSQL and MySQL type RDS instances to enable IAM database authentication.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/rds/enable-iam-auth/"
			],
			"description": "Instance does not have IAM Authentication enabled",
			"severity": "MEDIUM",
			"warning": false,
			"status": 0,
			"resource": "aws_db_instance.vuln",
			"location": {
				"filename": "/src/database.tf",
				"start_line": 1,
				"end_line": 8
			}
		},
		{
			"rule_id": "AVD-AWS-0133",
			"long_id": "aws-rds-enable-performance-insights",
			"rule_description": "Enable Performance Insights to detect potential problems",
			"rule_provider": "aws",
			"rule_service": "rds",
			"impact": "Without adequate monitoring, performance related issues may go unreported and potentially lead to compromise.",
			"resolution": "Enable performance insights",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/rds/enable-performance-insights/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/rds_cluster_instance#performance_insights_kms_key_id",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/db_instance#performance_insights_kms_key_id"
			],
			"description": "Instance does not have performance insights enabled.",
			"severity": "LOW",
			"warning": false,
			"status": 0,
			"resource": "aws_db_instance.vuln",
			"location": {
				"filename": "/src/database.tf",
				"start_line": 1,
				"end_line": 8
			}
		},
		{
			"rule_id": "AVD-AWS-0180",
			"long_id": "aws-rds-enable-public-access",
			"rule_description": "RDS Publicly Accessible",
			"rule_provider": "aws",
			"rule_service": "rds",
			"impact": "",
			"resolution": "Remove the public endpoint from the RDS instance'",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/rds/enable-public-access/"
			],
			"description": "Instance has Public Access enabled",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "aws_db_instance.vuln.publicly_accessible",
			"location": {
				"filename": "/src/database.tf",
				"start_line": 6,
				"end_line": 6
			}
		},
		{
			"rule_id": "AVD-AWS-0080",
			"long_id": "aws-rds-encrypt-instance-storage-data",
			"rule_description": "RDS encryption has not been enabled at a DB Instance level.",
			"rule_provider": "aws",
			"rule_service": "rds",
			"impact": "Data can be read from RDS instances if compromised",
			"resolution": "Enable encryption for RDS instances",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/rds/encrypt-instance-storage-data/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/db_instance"
			],
			"description": "Instance does not have storage encryption enabled.",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "aws_db_instance.vuln",
			"location": {
				"filename": "/src/database.tf",
				"start_line": 7,
				"end_line": 7
			}
		},
		{
			"rule_id": "AVD-AWS-0082",
			"long_id": "aws-rds-no-public-db-access",
			"rule_description": "A database resource is marked as publicly accessible.",
			"rule_provider": "aws",
			"rule_service": "rds",
			"impact": "The database instance is publicly accessible",
			"resolution": "Set the database to not be publicly accessible",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/rds/no-public-db-access/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/db_instance"
			],
			"description": "Instance is exposed publicly.",
			"severity": "CRITICAL",
			"warning": false,
			"status": 0,
			"resource": "aws_db_instance.vuln",
			"location": {
				"filename": "/src/database.tf",
				"start_line": 6,
				"end_line": 6
			}
		},
		{
			"rule_id": "AVD-AWS-0077",
			"long_id": "aws-rds-specify-backup-retention",
			"rule_description": "RDS Cluster and RDS instance should have backup retention longer than default 1 day",
			"rule_provider": "aws",
			"rule_service": "rds",
			"impact": "Potential loss of data and short opportunity for recovery",
			"resolution": "Explicitly set the retention period to greater than the default",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/rds/specify-backup-retention/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/rds_cluster#backup_retention_period",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/db_instance#backup_retention_period"
			],
			"description": "Instance has very low backup retention period.",
			"severity": "MEDIUM",
			"warning": false,
			"status": 0,
			"resource": "aws_db_instance.vuln",
			"location": {
				"filename": "/src/database.tf",
				"start_line": 1,
				"end_line": 8
			}
		},
		{
			"rule_id": "AVD-AWS-0086",
			"long_id": "aws-s3-block-public-acls",
			"rule_description": "S3 Access block should block public ACL",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "PUT calls with public ACLs specified can make objects public",
			"resolution": "Enable blocking any PUT calls with a public ACL specified",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/s3/block-public-acls/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_public_access_block#block_public_acls"
			],
			"description": "No public access block so not blocking public acls",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "aws_s3_bucket.public",
			"location": {
				"filename": "/src/main.tf",
				"start_line": 5,
				"end_line": 8
			}
		},
		{
			"rule_id": "AVD-AWS-0087",
			"long_id": "aws-s3-block-public-policy",
			"rule_description": "S3 Access block should block public policy",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "Users could put a policy that allows public access",
			"resolution": "Prevent policies that allow public access being PUT",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/s3/block-public-policy/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_public_access_block#block_public_policy"
			],
			"description": "No public access block so not blocking public policies",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "aws_s3_bucket.public",
			"location": {
				"filename": "/src/main.tf",
				"start_line": 5,
				"end_line": 8
			}
		},
		{
			"rule_id": "AVD-AWS-0088",
			"long_id": "aws-s3-enable-bucket-encryption",
			"rule_description": "Unencrypted S3 bucket.",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "The bucket objects could be read if compromised",
			"resolution": "Configure bucket encryption",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/s3/enable-bucket-encryption/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket#enable-default-server-side-encryption"
			],
			"description": "Bucket does not have encryption enabled",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "aws_s3_bucket.public",
			"location": {
				"filename": "/src/main.tf",
				"start_line": 5,
				"end_line": 8
			}
		},
		{
			"rule_id": "AVD-AWS-0089",
			"long_id": "aws-s3-enable-bucket-logging",
			"rule_description": "S3 Bucket does not have logging enabled.",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "There is no way to determine the access to this bucket",
			"resolution": "Add a logging block to the resource to enable access logging",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/s3/enable-bucket-logging/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket"
			],
			"description": "Bucket does not have logging enabled",
			"severity": "MEDIUM",
			"warning": false,
			"status": 0,
			"resource": "aws_s3_bucket.public",
			"location": {
				"filename": "/src/main.tf",
				"start_line": 5,
				"end_line": 8
			}
		},
		{
			"rule_id": "AVD-AWS-0090",
			"long_id": "aws-s3-enable-versioning",
			"rule_description": "S3 Data should be versioned",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "Deleted or modified data would not be recoverable",
			"resolution": "Enable versioning to protect against accidental/malicious removal or modification",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/s3/enable-versioning/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket#versioning"
			],
			"description": "Bucket does not have versioning enabled",
			"severity": "MEDIUM",
			"warning": false,
			"status": 0,
			"resource": "aws_s3_bucket.public",
			"location": {
				"filename": "/src/main.tf",
				"start_line": 5,
				"end_line": 8
			}
		},
		{
			"rule_id": "AVD-AWS-0132",
			"long_id": "aws-s3-encryption-customer-key",
			"rule_description": "S3 encryption should use Customer Managed Keys",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "Using AWS managed keys does not allow for fine grained control",
			"resolution": "Enable encryption using customer managed keys",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/s3/encryption-customer-key/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket#enable-default-server-side-encryption"
			],
			"description": "Bucket does not encrypt data with a customer managed key.",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "aws_s3_bucket.public",
			"location": {
				"filename": "/src/main.tf",
				"start_line": 5,
				"end_line": 8
			}
		},
		{
			"rule_id": "AVD-AWS-0091",
			"long_id": "aws-s3-ignore-public-acls",
			"rule_description": "S3 Access Block should Ignore Public Acl",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "PUT calls with public ACLs specified can make objects public",
			"resolution": "Enable ignoring the application of public ACLs in PUT calls",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/s3/ignore-public-acls/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_public_access_block#ignore_public_acls"
			],
			"description": "No public access block so not ignoring public acls",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "aws_s3_bucket.public",
			"location": {
				"filename": "/src/main.tf",
				"start_line": 5,
				"end_line": 8
			}
		},
		{
			"rule_id": "AVD-AWS-0092",
			"long_id": "aws-s3-no-public-access-with-acl",
			"rule_description": "S3 Buckets not publicly accessible through ACL.",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "Public access to the bucket can lead to data leakage",
			"resolution": "Don't use canned ACLs or switch to private acl",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/s3/no-public-access-with-acl/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket"
			],
			"description": "Bucket has a public ACL: 'public-read'.",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "aws_s3_bucket.public",
			"location": {
				"filename": "/src/main.tf",
				"start_line": 7,
				"end_line": 7
			}
		},
		{
			"rule_id": "AVD-AWS-0093",
			"long_id": "aws-s3-no-public-buckets",
			"rule_description": "S3 Access block should restrict public bucket to limit access",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "Public buckets can be accessed by anyone",
			"resolution": "Limit the access to public buckets to only the owner or AWS Services (eg; CloudFront)",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/s3/no-public-buckets/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_public_access_block#restrict_public_buckets¡"
			],
			"description": "No public access block so not restricting public buckets",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "aws_s3_bucket.public",
			"location": {
				"filename": "/src/main.tf",
				"start_line": 5,
				"end_line": 8
			}
		},
		{
			"rule_id": "AVD-AWS-0094",
			"long_id": "aws-s3-specify-public-access-block",
			"rule_description": "S3 buckets should each define an aws_s3_bucket_public_access_block",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "Public access policies may be applied to sensitive data buckets",
			"resolution": "Define a aws_s3_bucket_public_access_block for the given bucket to control public access policies",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/s3/specify-public-access-block/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_public_access_block#bucket"
			],
			"description": "Bucket does not have a corresponding public access block.",
			"severity": "LOW",
			"warning": false,
			"status": 0,
			"resource": "aws_s3_bucket.public",
			"location": {
				"filename": "/src/main.tf",
				"start_line": 5,
				"end_line": 8
			}
		}
	]
}
