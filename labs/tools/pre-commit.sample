#!/usr/bin/env bash
set -euo pipefail
echo "[pre-commit] scanning staged files for secrets…"

# Collect staged files (added/changed)
mapfile -t STAGED < <(git diff --cached --name-only --diff-filter=ACM)
if [ ${#STAGED[@]} -eq 0 ]; then
    echo "[pre-commit] no staged files; skipping scans"
    exit 0
fi

# Limit to existing regular files only
FILES=()
for f in "${STAGED[@]}"; do
    [ -f "$f" ] && FILES+=("$f")
done
if [ ${#FILES[@]} -eq 0 ]; then
    echo "[pre-commit] no regular files to scan; skipping"
    exit 0
fi

# Root of repo
REPO_ROOT=$(git rev-parse --show-toplevel)

# Run TruffleHog
echo "[pre-commit] TruffleHog scan…"
if ! docker run --rm -v "${REPO_ROOT}:/repo" -w /repo \
    trufflesecurity/trufflehog:latest \
    filesystem --fail --only-verified "${FILES[@]}"
then
    echo -e "\n✖ TruffleHog detected potential secrets. See output above for details." >&2
    exit 1
fi

# Run Gitleaks
echo "[pre-commit] Gitleaks scan…"
GITLEAKS_OUTPUT=$(docker run --rm -v "${REPO_ROOT}:/repo" -w /repo \
    zricethezav/gitleaks:latest \
    detect --source=/repo --verbose --exit-code=0 --no-banner || true)

echo "$GITLEAKS_OUTPUT"

# Check if any non-lectures files have leaks
if echo "$GITLEAKS_OUTPUT" | grep -q "File:" && ! echo "$GITLEAKS_OUTPUT" | grep -q "File:.*lectures/"; then
    echo -e "\n✖ Gitleaks detected potential secrets in non-excluded files." >&2
    exit 1
elif echo "$GITLEAKS_OUTPUT" | grep -q "File:.*lectures/"; then
    echo -e "\n⚠️ Gitleaks found potential secrets only in excluded directories (lectures/)." >&2
fi

echo "✓ No secrets detected; proceeding with commit."
exit 0
